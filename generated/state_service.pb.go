// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: proto/state_service.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChanelStateRequest is a request for channel state.
type ChannelStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel_id contains id of the channel which state is requested.
	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// signature is a client signature of the message which contains
	// channel_id. It is used for client authorization.
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// current block number (signature will be valid only for short time around this block number)
	CurrentBlock uint64 `protobuf:"varint,3,opt,name=current_block,json=currentBlock,proto3" json:"current_block,omitempty"`
}

func (x *ChannelStateRequest) Reset() {
	*x = ChannelStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_state_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelStateRequest) ProtoMessage() {}

func (x *ChannelStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelStateRequest.ProtoReflect.Descriptor instead.
func (*ChannelStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_state_service_proto_rawDescGZIP(), []int{0}
}

func (x *ChannelStateRequest) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *ChannelStateRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ChannelStateRequest) GetCurrentBlock() uint64 {
	if x != nil {
		return x.CurrentBlock
	}
	return 0
}

// ChannelStateReply message contains a latest channel state. current_nonce and
// current_value fields can be different from ones stored in the blockchain if
// server started withdrawing funds froms channel but transaction is still not
// finished.
type ChannelStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// current_nonce is a latest nonce of the payment channel.
	CurrentNonce []byte `protobuf:"bytes,1,opt,name=current_nonce,json=currentNonce,proto3" json:"current_nonce,omitempty"`
	// current_signed_amount is a last amount which were signed by client with current_nonce
	// it could be absent if none message was signed with current_nonce
	CurrentSignedAmount []byte `protobuf:"bytes,2,opt,name=current_signed_amount,json=currentSignedAmount,proto3" json:"current_signed_amount,omitempty"`
	// current_signature is a last signature sent by client with current_nonce
	// it could be absent if none message was signed with current nonce
	CurrentSignature []byte `protobuf:"bytes,3,opt,name=current_signature,json=currentSignature,proto3" json:"current_signature,omitempty"`
	// last amount which was signed by client with nonce=current_nonce - 1
	OldNonceSignedAmount []byte `protobuf:"bytes,4,opt,name=old_nonce_signed_amount,json=oldNonceSignedAmount,proto3" json:"old_nonce_signed_amount,omitempty"`
	// last signature sent by client with nonce = current_nonce - 1
	OldNonceSignature []byte `protobuf:"bytes,5,opt,name=old_nonce_signature,json=oldNonceSignature,proto3" json:"old_nonce_signature,omitempty"`
	// If the client / user chooses to sign upfront , the planned amount in cogs will be indicative of this.
	// For pay per use, this will be zero
	PlannedAmount uint64 `protobuf:"varint,6,opt,name=planned_amount,json=plannedAmount,proto3" json:"planned_amount,omitempty"`
	// If the client / user chooses to sign upfront , the usage amount in cogs will be indicative of how much of the
	// planned amount has actually been used.
	// For pay per use, this will be zero
	UsedAmount uint64 `protobuf:"varint,7,opt,name=used_amount,json=usedAmount,proto3" json:"used_amount,omitempty"`
}

func (x *ChannelStateReply) Reset() {
	*x = ChannelStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_state_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelStateReply) ProtoMessage() {}

func (x *ChannelStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelStateReply.ProtoReflect.Descriptor instead.
func (*ChannelStateReply) Descriptor() ([]byte, []int) {
	return file_proto_state_service_proto_rawDescGZIP(), []int{1}
}

func (x *ChannelStateReply) GetCurrentNonce() []byte {
	if x != nil {
		return x.CurrentNonce
	}
	return nil
}

func (x *ChannelStateReply) GetCurrentSignedAmount() []byte {
	if x != nil {
		return x.CurrentSignedAmount
	}
	return nil
}

func (x *ChannelStateReply) GetCurrentSignature() []byte {
	if x != nil {
		return x.CurrentSignature
	}
	return nil
}

func (x *ChannelStateReply) GetOldNonceSignedAmount() []byte {
	if x != nil {
		return x.OldNonceSignedAmount
	}
	return nil
}

func (x *ChannelStateReply) GetOldNonceSignature() []byte {
	if x != nil {
		return x.OldNonceSignature
	}
	return nil
}

func (x *ChannelStateReply) GetPlannedAmount() uint64 {
	if x != nil {
		return x.PlannedAmount
	}
	return 0
}

func (x *ChannelStateReply) GetUsedAmount() uint64 {
	if x != nil {
		return x.UsedAmount
	}
	return 0
}

type FreeCallStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Has the user email id
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// signer-token = (user@mail, user-public-key, token_issue_date), this is generated my Market place Dapp
	// to leverage free calls from SDK/ snet-cli, you will need this signer-token to be downloaded from Dapp
	TokenForFreeCall []byte `protobuf:"bytes,2,opt,name=token_for_free_call,json=tokenForFreeCall,proto3" json:"token_for_free_call,omitempty"`
	// Token expiration date in Block number
	TokenExpiryDateBlock uint64 `protobuf:"varint,3,opt,name=token_expiry_date_block,json=tokenExpiryDateBlock,proto3" json:"token_expiry_date_block,omitempty"`
	// Signature is made up of the below, user signs with the private key corresponding with the public key used to generate the authorized token
	// free-call-metadata = ("__prefix_free_trial",user_id,organization_id,service_id,group_id,current_block,authorized_token)
	Signature []byte `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	// current block number (signature will be valid only for short time around this block number)
	CurrentBlock uint64 `protobuf:"varint,5,opt,name=current_block,json=currentBlock,proto3" json:"current_block,omitempty"`
}

func (x *FreeCallStateRequest) Reset() {
	*x = FreeCallStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_state_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeCallStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeCallStateRequest) ProtoMessage() {}

func (x *FreeCallStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeCallStateRequest.ProtoReflect.Descriptor instead.
func (*FreeCallStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_state_service_proto_rawDescGZIP(), []int{2}
}

func (x *FreeCallStateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FreeCallStateRequest) GetTokenForFreeCall() []byte {
	if x != nil {
		return x.TokenForFreeCall
	}
	return nil
}

func (x *FreeCallStateRequest) GetTokenExpiryDateBlock() uint64 {
	if x != nil {
		return x.TokenExpiryDateBlock
	}
	return 0
}

func (x *FreeCallStateRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *FreeCallStateRequest) GetCurrentBlock() uint64 {
	if x != nil {
		return x.CurrentBlock
	}
	return 0
}

type FreeCallStateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Has the user email id
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Balance number of free calls available
	FreeCallsAvailable uint64 `protobuf:"varint,2,opt,name=free_calls_available,json=freeCallsAvailable,proto3" json:"free_calls_available,omitempty"`
}

func (x *FreeCallStateReply) Reset() {
	*x = FreeCallStateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_state_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeCallStateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeCallStateReply) ProtoMessage() {}

func (x *FreeCallStateReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_state_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeCallStateReply.ProtoReflect.Descriptor instead.
func (*FreeCallStateReply) Descriptor() ([]byte, []int) {
	return file_proto_state_service_proto_rawDescGZIP(), []int{3}
}

func (x *FreeCallStateReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FreeCallStateReply) GetFreeCallsAvailable() uint64 {
	if x != nil {
		return x.FreeCallsAvailable
	}
	return 0
}

var File_proto_state_service_proto protoreflect.FileDescriptor

var file_proto_state_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x73, 0x63,
	0x72, 0x6f, 0x77, 0x22, 0x77, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xc8, 0x02, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x6f, 0x6c, 0x64, 0x5f,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x6f, 0x6c, 0x64, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6f, 0x6c,
	0x64, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x14, 0x46, 0x72, 0x65, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x6f, 0x72,
	0x46, 0x72, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x22, 0x5f, 0x0a, 0x12, 0x46, 0x72, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x5f,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x12, 0x66, 0x72, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x32, 0x69, 0x0a, 0x1a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x6b,
	0x0a, 0x14, 0x46, 0x72, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1c, 0x2e, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x2e, 0x46, 0x72, 0x65, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x2c, 0x0a, 0x1f, 0x69,
	0x6f, 0x2e, 0x73, 0x69, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x6e, 0x65, 0x74,
	0x2e, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x5a, 0x09,
	0x2e, 0x2e, 0x2f, 0x65, 0x73, 0x63, 0x72, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_state_service_proto_rawDescOnce sync.Once
	file_proto_state_service_proto_rawDescData = file_proto_state_service_proto_rawDesc
)

func file_proto_state_service_proto_rawDescGZIP() []byte {
	file_proto_state_service_proto_rawDescOnce.Do(func() {
		file_proto_state_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_state_service_proto_rawDescData)
	})
	return file_proto_state_service_proto_rawDescData
}

var file_proto_state_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_state_service_proto_goTypes = []any{
	(*ChannelStateRequest)(nil),  // 0: escrow.ChannelStateRequest
	(*ChannelStateReply)(nil),    // 1: escrow.ChannelStateReply
	(*FreeCallStateRequest)(nil), // 2: escrow.FreeCallStateRequest
	(*FreeCallStateReply)(nil),   // 3: escrow.FreeCallStateReply
}
var file_proto_state_service_proto_depIdxs = []int32{
	0, // 0: escrow.PaymentChannelStateService.GetChannelState:input_type -> escrow.ChannelStateRequest
	2, // 1: escrow.FreeCallStateService.GetFreeCallsAvailable:input_type -> escrow.FreeCallStateRequest
	1, // 2: escrow.PaymentChannelStateService.GetChannelState:output_type -> escrow.ChannelStateReply
	3, // 3: escrow.FreeCallStateService.GetFreeCallsAvailable:output_type -> escrow.FreeCallStateReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_state_service_proto_init() }
func file_proto_state_service_proto_init() {
	if File_proto_state_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_state_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChannelStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_state_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ChannelStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_state_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FreeCallStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_state_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FreeCallStateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_state_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_state_service_proto_goTypes,
		DependencyIndexes: file_proto_state_service_proto_depIdxs,
		MessageInfos:      file_proto_state_service_proto_msgTypes,
	}.Build()
	File_proto_state_service_proto = out.File
	file_proto_state_service_proto_rawDesc = nil
	file_proto_state_service_proto_goTypes = nil
	file_proto_state_service_proto_depIdxs = nil
}
